package com.tasklist.workflow;

import java.util.List;

import org.camunda.bpm.engine.RuntimeService;
import org.camunda.bpm.engine.delegate.DelegateExecution;
import org.camunda.bpm.engine.delegate.JavaDelegate;
import org.camunda.bpm.engine.runtime.ProcessInstance;
import org.springframework.beans.factory.annotation.Autowired;

public class CustomWFStart implements JavaDelegate{
	
	@Autowired
	RuntimeService runtimeService;

	@Override
	public void execute(DelegateExecution execution) throws Exception {
		// TODO Auto-generated method stub
		
	}
	
	
	private void startProcessWithSpecificTask(String processDefKey, String activityId, String businessKey) {
		ProcessInstance instance = runtimeService.createProcessInstanceByKey(processDefKey)
				.startBeforeActivity(processDefKey)
				.businessKey(businessKey)
				.setVariable("namef","test")
				.execute();
		instance.getProcessInstanceId();
	}
	
	
	private void getActiveIds(String processId, String currentActivityId) {
		List<String> activityIds = runtimeService.getActiveActivityIds(processId);
		for(String activityId : activityIds) {
			if (!activityId.equalsIgnoreCase(currentActivityId)) {
				//cancel activityId
				runtimeService.createProcessInstanceModification(processId).cancelAllForActivity(activityId).execute();
			}
		}
	}
	
	
	private List<ProcessInstance> getChildProcessIdByBusinessKey(String processInstanceId){
		return runtimeService.createProcessInstanceQuery().superProcessInstanceId(processInstanceId).active().list();
	}

}
